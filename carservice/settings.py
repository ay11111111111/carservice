"""
Django settings for carservice project.

Generated by 'django-admin startproject' using Django 3.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
MEDIA_ROOT =  os.path.join(BASE_DIR, 'carservice/media')
MEDIA_URL = '/media/'

#Email Backend
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'autoervice2020@gmail.com'
EMAIL_HOST_PASSWORD = 'Behappy7+'
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = 'autoervice2020@gmail.com'
SERVER_EMAIL = 'autoervice2020@gmail.com'
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 's@c)++ry4b_kcf85zf6oj+n*3g#te=4%!v(eskw_gf7v(8t$if'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

AUTH_USER_MODEL = 'users.CustomUser'

# Application definition

INSTALLED_APPS = [
    'app.apps.AppConfig',
    'users.apps.UsersConfig',
    'garage.apps.GarageConfig',
    'shop.apps.ShopConfig',
    'notification.apps.NotificationConfig',
    'repair.apps.RepairConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crispy_forms',
    'phonenumber_field',
    'rest_framework',
    'drf_yasg',
    'rest_framework.authtoken',
    'smart_selects',
    'datetime',
    'fcm_django',
    'django_filters',
    'django_unixdatetimefield',
]

FCM_DJANGO_SETTINGS = {
        "APP_VERBOSE_NAME": "carservice",
        # "FCM_SERVER_KEY": "AAAA3tZmleU:APA91bFMrBGIDBs7FRaFyZ8NOMKoCBJWWJ0-Ywx1MJjW6XgbkLfKOaZssdi6TXsiVfp1xiwCljCYbhKxwnI8fhSnxqgO2bbzJOFPTv-agoH0k0SvyA6MZonNmoFm786BYcuDeahvH2JY",
        "FCM_SERVER_KEY": "AAAA1pdV3MY:APA91bHrXzsPeFE3gDJ5x_dV0RL__wiT9DhhEYIu87yzOJ8uXQEmbYfralqVH7uIKd5DSKAnwmWf0AQc7plEclQK3xdfzbuvjIYpW8X6vdLxV_Af8KnvYiNZtjCaM4l7EdogH0rEKNpR",
        "ONE_DEVICE_PER_USER": False,
        "DELETE_INACTIVE_DEVICES": False,
        # "APP_VERBOSE_NAME": "Notification",
         # default: _('FCM Django')
         # true if you want to have only one active device per registered user at a time
         # default: False
        # "ONE_DEVICE_PER_USER": False,
         # devices to which notifications cannot be sent,
         # are deleted upon receiving error response from FCM
         # default: False
        # "DELETE_INACTIVE_DEVICES": False,
}

USE_DJANGO_JQUERY = True

REST_FRAMEWORK = {
  'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema',
  'DEFAULT_AUTHENTICATION_CLASSES': [
      'rest_framework.authentication.TokenAuthentication',
  ],
  'DEFAULT_PERMISSION_CLASSES': (
      'rest_framework.permissions.AllowAny',
  ),
  'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend'],
  'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.MultiPartParser',
    ],
}

SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'api_key': {
            'type': 'apiKey',
            'in': 'header',
            'name': 'Authorization'
        }
    },
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'carservice.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'carservice.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = (
        'django.contrib.auth.backends.ModelBackend',
    )


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Almaty'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/static/'
ALLOWED_HOSTS = ['185.116.194.41']
#ALLOWED_HOSTS = ['127.0.0.1']
CRISPY_TEMPLATE_PACK = 'bootstrap4'

LOGIN_REDIRECT_URL = 'home'
LOGIN_URL = 'login'
